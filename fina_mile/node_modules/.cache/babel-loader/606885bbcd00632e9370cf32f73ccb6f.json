{"ast":null,"code":"import { isElementVisibleAndNotHidden } from '../focus';\nimport { getDocument } from './getDocument';\n/**\n * Gets the first visible element that matches the given selector\n * @param selector - The selector to use to find potential visible elements\n * @returns The first visible element that matches the selector, otherwise undefined\n *\n * @public\n */\nexport function getFirstVisibleElementFromSelector(selector) {\n  var elements = getDocument().querySelectorAll(selector);\n  // Iterate across the elements that match the selector and return the first visible/non-hidden element\n  return Array.from(elements).find(function (element) {\n    return isElementVisibleAndNotHidden(element);\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,4BAA4B,QAAQ,UAAU;AACvD,SAASC,WAAW,QAAQ,eAAe;AAE3C;;;;;;;AAOA,OAAM,SAAUC,kCAAkC,CAACC,QAAgB;EACjE,IAAMC,QAAQ,GAAGH,WAAW,EAAG,CAACI,gBAAgB,CAACF,QAAQ,CAAC;EAE1D;EACA,OAAOG,KAAK,CAACC,IAAI,CAACH,QAAQ,CAAC,CAACI,IAAI,CAAC,UAACC,OAAoB;IAAK,mCAA4B,CAACA,OAAO,CAAC;EAArC,CAAqC,CAAC;AACnG","names":["isElementVisibleAndNotHidden","getDocument","getFirstVisibleElementFromSelector","selector","elements","querySelectorAll","Array","from","find","element"],"sources":["/Users/edward/Zhuo/NYU/FA22/design_project/project/node_modules/@fluentui/style-utilities/node_modules/@fluentui/utilities/lib/src/dom/getFirstVisibleElementFromSelector.ts"],"sourcesContent":["import { isElementVisibleAndNotHidden } from '../focus';\nimport { getDocument } from './getDocument';\n\n/**\n * Gets the first visible element that matches the given selector\n * @param selector - The selector to use to find potential visible elements\n * @returns The first visible element that matches the selector, otherwise undefined\n *\n * @public\n */\nexport function getFirstVisibleElementFromSelector(selector: string): Element | undefined {\n  const elements = getDocument()!.querySelectorAll(selector);\n\n  // Iterate across the elements that match the selector and return the first visible/non-hidden element\n  return Array.from(elements).find((element: HTMLElement) => isElementVisibleAndNotHidden(element));\n}\n"]},"metadata":{},"sourceType":"module"}