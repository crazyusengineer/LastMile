{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\n/** @jsxRuntime classic */\n/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '@fluentui/foundation-legacy';\nimport { getNativeProps, htmlElementProperties, warnDeprecations } from '../../Utilities';\nimport { styles } from './Stack.styles';\nimport { StackItem } from './StackItem/StackItem';\nvar StackView = function (props) {\n  var _a = props.as,\n    RootType = _a === void 0 ? 'div' : _a,\n    disableShrink = props.disableShrink,\n    wrap = props.wrap,\n    rest = __rest(props, [\"as\", \"disableShrink\", \"wrap\"]);\n  warnDeprecations('Stack', props, {\n    gap: 'tokens.childrenGap',\n    maxHeight: 'tokens.maxHeight',\n    maxWidth: 'tokens.maxWidth',\n    padding: 'tokens.padding'\n  });\n  // React.Fragment needs to be ignored before checking for Stack's children\n  var stackChildren = React.Children.toArray(props.children);\n  if (stackChildren.length === 1 && React.isValidElement(stackChildren[0]) && stackChildren[0].type === React.Fragment) {\n    stackChildren = stackChildren[0].props.children;\n  }\n  stackChildren = React.Children.map(stackChildren, function (child, index) {\n    if (!child) {\n      return null;\n    }\n    if (_isStackItem(child)) {\n      var defaultItemProps = {\n        shrink: !disableShrink\n      };\n      return React.cloneElement(child, __assign(__assign({}, defaultItemProps), child.props));\n    }\n    return child;\n  });\n  var nativeProps = getNativeProps(rest, htmlElementProperties);\n  var Slots = getSlots(props, {\n    root: RootType,\n    inner: 'div'\n  });\n  if (wrap) {\n    return withSlots(Slots.root, __assign({}, nativeProps), withSlots(Slots.inner, null, stackChildren));\n  }\n  return withSlots(Slots.root, __assign({}, nativeProps), stackChildren);\n};\nfunction _isStackItem(item) {\n  // In theory, we should be able to just check item.type === StackItem.\n  // However, under certain unclear circumstances (see https://github.com/microsoft/fluentui/issues/10785),\n  // the object identity is different despite the function implementation being the same.\n  return !!item && typeof item === 'object' && !!item.type &&\n  // StackItem is generated by createComponent, so we need to check its displayName instead of name\n  item.type.displayName === StackItem.displayName;\n}\nvar StackStatics = {\n  Item: StackItem\n};\nexport var Stack = createComponent(StackView, {\n  displayName: 'Stack',\n  styles: styles,\n  statics: StackStatics\n});\nexport default Stack;","map":{"version":3,"mappings":";AAAA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,6BAA6B;AAClF,SAASC,cAAc,EAAEC,qBAAqB,EAAEC,gBAAgB,QAAQ,iBAAiB;AACzF,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,SAAS,QAAQ,uBAAuB;AAIjD,IAAMC,SAAS,GAA4B,eAAK;EACtC,SAAuDC,KAAK,GAAxC;IAAhBC,QAAQ,mBAAG,KAAK;IAAEC,aAAa,GAAoBF,KAAK,cAAzB;IAAEG,IAAI,GAAcH,KAAK,KAAnB;IAAKI,IAAI,UAAKJ,KAAK,EAA9D,+BAAsD,CAAF;EAE1DJ,gBAAgB,CAAC,OAAO,EAAEI,KAAK,EAAE;IAC/BK,GAAG,EAAE,oBAAoB;IACzBC,SAAS,EAAE,kBAAkB;IAC7BC,QAAQ,EAAE,iBAAiB;IAC3BC,OAAO,EAAE;GACV,CAAC;EAEF;EACA,IAAIC,aAAa,GAAGnB,KAAK,CAACoB,QAAQ,CAACC,OAAO,CAACX,KAAK,CAACY,QAAQ,CAAC;EAC1D,IACEH,aAAa,CAACI,MAAM,KAAK,CAAC,IAC1BvB,KAAK,CAACwB,cAAc,CAACL,aAAa,CAAC,CAAC,CAAC,CAAC,IACtCA,aAAa,CAAC,CAAC,CAAC,CAACM,IAAI,KAAKzB,KAAK,CAAC0B,QAAQ,EACxC;IACAP,aAAa,GAAGA,aAAa,CAAC,CAAC,CAAC,CAACT,KAAK,CAACY,QAAQ;;EAGjDH,aAAa,GAAGnB,KAAK,CAACoB,QAAQ,CAACO,GAAG,CAACR,aAAa,EAAE,UAACS,KAA0C,EAAEC,KAAa;IAC1G,IAAI,CAACD,KAAK,EAAE;MACV,OAAO,IAAI;;IAGb,IAAIE,YAAY,CAACF,KAAK,CAAC,EAAE;MACvB,IAAMG,gBAAgB,GAAoB;QACxCC,MAAM,EAAE,CAACpB;OACV;MAED,OAAOZ,KAAK,CAACiC,YAAY,CAACL,KAAK,wBAC1BG,gBAAgB,GAChBH,KAAK,CAAClB,KAAK,EACd;;IAGJ,OAAOkB,KAAK;EACd,CAAC,CAAC;EAEF,IAAMM,WAAW,GAAG9B,cAAc,CAAuCU,IAAI,EAAET,qBAAqB,CAAC;EAErG,IAAM8B,KAAK,GAAGhC,QAAQ,CAA2BO,KAAK,EAAE;IACtD0B,IAAI,EAAEzB,QAAQ;IACd0B,KAAK,EAAE;GACR,CAAC;EAEF,IAAIxB,IAAI,EAAE;IACR,OACEZ,UAACkC,KAAK,CAACC,IAAI,eAAKF,WAAW,GACzBjC,UAACkC,KAAK,CAACE,KAAK,QAAElB,aAAa,CAAe,CAC/B;;EAIjB,OAAOlB,UAACkC,KAAK,CAACC,IAAI,eAAKF,WAAW,GAAGf,aAAa,CAAc;AAClE,CAAC;AAED,SAASW,YAAY,CAACQ,IAAqB;EACzC;EACA;EACA;EACA,OACE,CAAC,CAACA,IAAI,IACN,OAAOA,IAAI,KAAK,QAAQ,IACxB,CAAC,CAAEA,IAA2B,CAACb,IAAI;EACnC;EACEa,IAA2B,CAACb,IAA4B,CAACc,WAAW,KAAK/B,SAAS,CAAC+B,WAAW;AAEpG;AAEA,IAAMC,YAAY,GAAG;EACnBC,IAAI,EAAEjC;CACP;AAED,OAAO,IAAMkC,KAAK,GAEdxC,eAAe,CAACO,SAAS,EAAE;EAC7B8B,WAAW,EAAE,OAAO;EACpBhC,MAAM;EACNoC,OAAO,EAAEH;CACV,CAAC;AAEF,eAAeE,KAAK","names":["React","withSlots","createComponent","getSlots","getNativeProps","htmlElementProperties","warnDeprecations","styles","StackItem","StackView","props","RootType","disableShrink","wrap","rest","gap","maxHeight","maxWidth","padding","stackChildren","Children","toArray","children","length","isValidElement","type","Fragment","map","child","index","_isStackItem","defaultItemProps","shrink","cloneElement","nativeProps","Slots","root","inner","item","displayName","StackStatics","Item","Stack","statics"],"sources":["/Users/edward/Zhuo/NYU/FA22/design_project/project/node_modules/@fluentui/react/lib/components/src/components/Stack/Stack.tsx"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '@fluentui/foundation-legacy';\nimport { getNativeProps, htmlElementProperties, warnDeprecations } from '../../Utilities';\nimport { styles } from './Stack.styles';\nimport { StackItem } from './StackItem/StackItem';\nimport type { IStackComponent, IStackProps, IStackSlots } from './Stack.types';\nimport type { IStackItemProps } from './StackItem/StackItem.types';\n\nconst StackView: IStackComponent['view'] = props => {\n  const { as: RootType = 'div', disableShrink, wrap, ...rest } = props;\n\n  warnDeprecations('Stack', props, {\n    gap: 'tokens.childrenGap',\n    maxHeight: 'tokens.maxHeight',\n    maxWidth: 'tokens.maxWidth',\n    padding: 'tokens.padding',\n  });\n\n  // React.Fragment needs to be ignored before checking for Stack's children\n  let stackChildren = React.Children.toArray(props.children);\n  if (\n    stackChildren.length === 1 &&\n    React.isValidElement(stackChildren[0]) &&\n    stackChildren[0].type === React.Fragment\n  ) {\n    stackChildren = stackChildren[0].props.children;\n  }\n\n  stackChildren = React.Children.map(stackChildren, (child: React.ReactElement<IStackItemProps>, index: number) => {\n    if (!child) {\n      return null;\n    }\n\n    if (_isStackItem(child)) {\n      const defaultItemProps: IStackItemProps = {\n        shrink: !disableShrink,\n      };\n\n      return React.cloneElement(child, {\n        ...defaultItemProps,\n        ...child.props,\n      });\n    }\n\n    return child;\n  });\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(rest, htmlElementProperties);\n\n  const Slots = getSlots<IStackProps, IStackSlots>(props, {\n    root: RootType,\n    inner: 'div',\n  });\n\n  if (wrap) {\n    return (\n      <Slots.root {...nativeProps}>\n        <Slots.inner>{stackChildren}</Slots.inner>\n      </Slots.root>\n    );\n  }\n\n  return <Slots.root {...nativeProps}>{stackChildren}</Slots.root>;\n};\n\nfunction _isStackItem(item: React.ReactNode): item is typeof StackItem {\n  // In theory, we should be able to just check item.type === StackItem.\n  // However, under certain unclear circumstances (see https://github.com/microsoft/fluentui/issues/10785),\n  // the object identity is different despite the function implementation being the same.\n  return (\n    !!item &&\n    typeof item === 'object' &&\n    !!(item as React.ReactElement).type &&\n    // StackItem is generated by createComponent, so we need to check its displayName instead of name\n    ((item as React.ReactElement).type as React.ComponentType).displayName === StackItem.displayName\n  );\n}\n\nconst StackStatics = {\n  Item: StackItem,\n};\n\nexport const Stack: React.FunctionComponent<IStackProps> & {\n  Item: React.FunctionComponent<IStackItemProps>;\n} = createComponent(StackView, {\n  displayName: 'Stack',\n  styles,\n  statics: StackStatics,\n});\n\nexport default Stack;\n"]},"metadata":{},"sourceType":"module"}