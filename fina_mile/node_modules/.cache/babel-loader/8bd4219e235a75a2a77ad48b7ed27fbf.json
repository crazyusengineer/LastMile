{"ast":null,"code":"import { findElementRecursive } from './findElementRecursive';\nimport { DATA_PORTAL_ATTRIBUTE } from './setPortalAttribute';\n/**\n * Determine whether a target is within a portal from perspective of root or optional parent.\n * This function only works against portal components that use the setPortalAttribute function.\n * If both parent and child are within the same portal this function will return false.\n * @param target - Element to query portal containment status of.\n * @param parent - Optional parent perspective. Search for containing portal stops at parent\n * (or root if parent is undefined or invalid.)\n */\nexport function portalContainsElement(target, parent) {\n  var elementMatch = findElementRecursive(target, function (testElement) {\n    return parent === testElement || testElement.hasAttribute(DATA_PORTAL_ATTRIBUTE);\n  });\n  return elementMatch !== null && elementMatch.hasAttribute(DATA_PORTAL_ATTRIBUTE);\n}","map":{"version":3,"mappings":"AAAA,SAASA,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,qBAAqB,QAAQ,sBAAsB;AAE5D;;;;;;;;AAQA,OAAM,SAAUC,qBAAqB,CAACC,MAAmB,EAAEC,MAAoB;EAC7E,IAAMC,YAAY,GAAGL,oBAAoB,CACvCG,MAAM,EACN,UAACG,WAAwB;IAAK,aAAM,KAAKA,WAAW,IAAIA,WAAW,CAACC,YAAY,CAACN,qBAAqB,CAAC;EAAzE,CAAyE,CACxG;EACD,OAAOI,YAAY,KAAK,IAAI,IAAIA,YAAY,CAACE,YAAY,CAACN,qBAAqB,CAAC;AAClF","names":["findElementRecursive","DATA_PORTAL_ATTRIBUTE","portalContainsElement","target","parent","elementMatch","testElement","hasAttribute"],"sources":["/Users/edward/Zhuo/NYU/FA22/design_project/project/node_modules/@fluentui/dom-utilities/src/portalContainsElement.ts"],"sourcesContent":["import { findElementRecursive } from './findElementRecursive';\nimport { DATA_PORTAL_ATTRIBUTE } from './setPortalAttribute';\n\n/**\n * Determine whether a target is within a portal from perspective of root or optional parent.\n * This function only works against portal components that use the setPortalAttribute function.\n * If both parent and child are within the same portal this function will return false.\n * @param target - Element to query portal containment status of.\n * @param parent - Optional parent perspective. Search for containing portal stops at parent\n * (or root if parent is undefined or invalid.)\n */\nexport function portalContainsElement(target: HTMLElement, parent?: HTMLElement): boolean {\n  const elementMatch = findElementRecursive(\n    target,\n    (testElement: HTMLElement) => parent === testElement || testElement.hasAttribute(DATA_PORTAL_ATTRIBUTE),\n  );\n  return elementMatch !== null && elementMatch.hasAttribute(DATA_PORTAL_ATTRIBUTE);\n}\n"]},"metadata":{},"sourceType":"module"}