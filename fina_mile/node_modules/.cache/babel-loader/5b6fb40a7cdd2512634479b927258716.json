{"ast":null,"code":"import * as React from 'react';\n/**\n * Hook which asynchronously executes a callback once the component has been mounted.\n *\n * @param callback - Function to call before mount.\n */\nexport var useMount = function (callback) {\n  var mountRef = React.useRef(callback);\n  mountRef.current = callback;\n  React.useEffect(function () {\n    var _a;\n    (_a = mountRef.current) === null || _a === void 0 ? void 0 : _a.call(mountRef);\n  }, []);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B;;;;;AAKA,OAAO,IAAMC,QAAQ,GAAG,UAACC,QAAoB;EAC3C,IAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAACF,QAAQ,CAAC;EACvCC,QAAQ,CAACE,OAAO,GAAGH,QAAQ;EAC3BF,KAAK,CAACM,SAAS,CAAC;;IACd,cAAQ,CAACD,OAAO,+CAAhBF,QAAQ,CAAY;EACtB,CAAC,EAAE,EAAE,CAAC;AACR,CAAC","names":["React","useMount","callback","mountRef","useRef","current","useEffect"],"sources":["/Users/edward/Zhuo/NYU/FA22/design_project/project/node_modules/@fluentui/react/node_modules/@fluentui/react-hooks/src/useMount.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * Hook which asynchronously executes a callback once the component has been mounted.\n *\n * @param callback - Function to call before mount.\n */\nexport const useMount = (callback: () => void) => {\n  const mountRef = React.useRef(callback);\n  mountRef.current = callback;\n  React.useEffect(() => {\n    mountRef.current?.();\n  }, []);\n};\n"]},"metadata":{},"sourceType":"module"}