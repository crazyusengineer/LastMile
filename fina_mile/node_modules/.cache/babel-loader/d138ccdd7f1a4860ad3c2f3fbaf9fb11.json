{"ast":null,"code":"import { FontSizes, FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\n// Fallback fonts, if specified system or web fonts are unavailable.\nvar FontFamilyFallbacks = \"'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif\";\n// By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\nvar defaultFontFamily = \"'Segoe UI', '\" + LocalizedFontNames.WestEuropean + \"'\";\n// Mapping of language prefix to to font family.\nvar LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian\n};\nfunction _fontFamilyWithFallbacks(fontFamily) {\n  return fontFamily + \", \" + FontFamilyFallbacks;\n}\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\nfunction _getLocalizedFontFamily(language) {\n  for (var lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return LanguageToFontMap[lang];\n    }\n  }\n  return defaultFontFamily;\n}\nfunction _createFont(size, weight, fontFamily) {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight\n  };\n}\nexport function createFontStyles(localeCode) {\n  var localizedFont = _getLocalizedFontFamily(localeCode);\n  var fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n  var fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback)\n  };\n  return fontStyles;\n}","map":{"version":3,"mappings":"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","names":["FontSizes","FontWeights","LocalizedFontFamilies","LocalizedFontNames","FontFamilyFallbacks","defaultFontFamily","WestEuropean","LanguageToFontMap","ar","Arabic","bg","Cyrillic","cs","EastEuropean","el","Greek","et","he","Hebrew","hi","Hindi","hr","hu","ja","Japanese","kk","ko","Korean","lt","lv","pl","ru","sk","th","Thai","tr","uk","vi","Vietnamese","ChineseSimplified","ChineseTraditional","hy","Armenian","ka","Georgian","_fontFamilyWithFallbacks","fontFamily","_getLocalizedFontFamily","language","lang","hasOwnProperty","indexOf","_createFont","size","weight","MozOsxFontSmoothing","WebkitFontSmoothing","fontSize","fontWeight","createFontStyles","localeCode","localizedFont","fontFamilyWithFallback","fontStyles","tiny","mini","regular","xSmall","small","smallPlus","medium","mediumPlus","large","xLarge","semibold","xLargePlus","xxLarge","xxLargePlus","superLarge","mega"],"sources":["/Users/edward/Zhuo/NYU/FA22/design_project/project/node_modules/@fluentui/react/node_modules/@fluentui/theme/lib/src/fonts/createFontStyles.ts"],"sourcesContent":["import { FontSizes, FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport type { IFontWeight, IRawStyle } from '@fluentui/merge-styles';\nimport type { IFontStyles } from '../types/IFontStyles';\n\n// Fallback fonts, if specified system or web fonts are unavailable.\nconst FontFamilyFallbacks = `'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif`;\n\n// By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\nconst defaultFontFamily = `'Segoe UI', '${LocalizedFontNames.WestEuropean}'`;\n\n// Mapping of language prefix to to font family.\nconst LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian,\n};\n\nfunction _fontFamilyWithFallbacks(fontFamily: string): string {\n  return `${fontFamily}, ${FontFamilyFallbacks}`;\n}\n\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\nfunction _getLocalizedFontFamily(language: string | null): string {\n  for (const lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (LanguageToFontMap as any)[lang];\n    }\n  }\n\n  return defaultFontFamily;\n}\n\nfunction _createFont(size: string, weight: IFontWeight, fontFamily: string): IRawStyle {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight,\n  };\n}\n\nexport function createFontStyles(localeCode: string | null): IFontStyles {\n  const localizedFont = _getLocalizedFontFamily(localeCode);\n  const fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n\n  const fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback),\n  };\n\n  return fontStyles;\n}\n"]},"metadata":{},"sourceType":"module"}