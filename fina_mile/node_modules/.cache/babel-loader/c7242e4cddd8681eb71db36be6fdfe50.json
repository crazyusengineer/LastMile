{"ast":null,"code":"import { Stylesheet } from './Stylesheet';\n/**\n * Separates the classes and style objects. Any classes that are pre-registered\n * args are auto expanded into objects.\n */\nexport function extractStyleParts() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var classes = [];\n  var objects = [];\n  var stylesheet = Stylesheet.getInstance();\n  function _processArgs(argsList) {\n    for (var _i = 0, argsList_1 = argsList; _i < argsList_1.length; _i++) {\n      var arg = argsList_1[_i];\n      if (arg) {\n        if (typeof arg === 'string') {\n          if (arg.indexOf(' ') >= 0) {\n            _processArgs(arg.split(' '));\n          } else {\n            var translatedArgs = stylesheet.argsFromClassName(arg);\n            if (translatedArgs) {\n              _processArgs(translatedArgs);\n            } else {\n              // Avoid adding the same class twice.\n              if (classes.indexOf(arg) === -1) {\n                classes.push(arg);\n              }\n            }\n          }\n        } else if (Array.isArray(arg)) {\n          _processArgs(arg);\n        } else if (typeof arg === 'object') {\n          objects.push(arg);\n        }\n      }\n    }\n  }\n  _processArgs(args);\n  return {\n    classes: classes,\n    objects: objects\n  };\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,cAAc;AAEzC;;;;AAIA,OAAM,SAAUC,iBAAiB;EAC/B;OAAA,UAAyD,EAAzDC,qBAAyD,EAAzDA,IAAyD;IAAzDC;;EAEA,IAAMC,OAAO,GAAa,EAAE;EAC5B,IAAMC,OAAO,GAAS,EAAE;EACxB,IAAMC,UAAU,GAAGN,UAAU,CAACO,WAAW,EAAE;EAE3C,SAASC,YAAY,CAACC,QAA+B;IACnD,KAAkB,UAAQ,EAARC,qBAAQ,EAARR,sBAAQ,EAARA,IAAQ,EAAE;MAAvB,IAAMS,GAAG;MACZ,IAAIA,GAAG,EAAE;QACP,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;UAC3B,IAAIA,GAAG,CAACC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACzBJ,YAAY,CAACG,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC;WAC7B,MAAM;YACL,IAAMC,cAAc,GAAGR,UAAU,CAACS,iBAAiB,CAACJ,GAAG,CAAC;YAExD,IAAIG,cAAc,EAAE;cAClBN,YAAY,CAACM,cAAc,CAAC;aAC7B,MAAM;cACL;cACA,IAAIV,OAAO,CAACQ,OAAO,CAACD,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC/BP,OAAO,CAACY,IAAI,CAACL,GAAG,CAAC;;;;SAIxB,MAAM,IAAIM,KAAK,CAACC,OAAO,CAACP,GAAG,CAAC,EAAE;UAC7BH,YAAY,CAACG,GAAG,CAAC;SAClB,MAAM,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;UAClCN,OAAO,CAACW,IAAI,CAACL,GAAG,CAAC;;;;EAIzB;EAEAH,YAAY,CAACL,IAAI,CAAC;EAElB,OAAO;IACLC,OAAO;IACPC,OAAO;GACR;AACH","names":["Stylesheet","extractStyleParts","_i","args","classes","objects","stylesheet","getInstance","_processArgs","argsList","argsList_1","arg","indexOf","split","translatedArgs","argsFromClassName","push","Array","isArray"],"sources":["/Users/edward/Zhuo/NYU/FA22/design_project/project/node_modules/@fluentui/merge-styles/src/extractStyleParts.ts"],"sourcesContent":["import { IStyle, IStyleBaseArray } from './IStyle';\nimport { Stylesheet } from './Stylesheet';\n\n/**\n * Separates the classes and style objects. Any classes that are pre-registered\n * args are auto expanded into objects.\n */\nexport function extractStyleParts(\n  ...args: (IStyle | IStyle[] | false | null | undefined)[]\n): { classes: string[]; objects: IStyleBaseArray } {\n  const classes: string[] = [];\n  const objects: {}[] = [];\n  const stylesheet = Stylesheet.getInstance();\n\n  function _processArgs(argsList: (IStyle | IStyle[])[]): void {\n    for (const arg of argsList) {\n      if (arg) {\n        if (typeof arg === 'string') {\n          if (arg.indexOf(' ') >= 0) {\n            _processArgs(arg.split(' '));\n          } else {\n            const translatedArgs = stylesheet.argsFromClassName(arg);\n\n            if (translatedArgs) {\n              _processArgs(translatedArgs);\n            } else {\n              // Avoid adding the same class twice.\n              if (classes.indexOf(arg) === -1) {\n                classes.push(arg);\n              }\n            }\n          }\n        } else if (Array.isArray(arg)) {\n          _processArgs(arg);\n        } else if (typeof arg === 'object') {\n          objects.push(arg);\n        }\n      }\n    }\n  }\n\n  _processArgs(args);\n\n  return {\n    classes,\n    objects,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}