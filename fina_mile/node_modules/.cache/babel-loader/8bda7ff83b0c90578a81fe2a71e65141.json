{"ast":null,"code":"import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\nexport function getVirtualParent(child) {\n  var parent;\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n  return parent;\n}","map":{"version":3,"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD;;;;;AAKA,OAAM,SAAUC,gBAAgB,CAACC,KAAkB;EACjD,IAAIC,MAA+B;EACnC,IAAID,KAAK,IAAIF,gBAAgB,CAACE,KAAK,CAAC,EAAE;IACpCC,MAAM,GAAGD,KAAK,CAACE,QAAQ,CAACD,MAAM;;EAEhC,OAAOA,MAAM;AACf","names":["isVirtualElement","getVirtualParent","child","parent","_virtual"],"sources":["/Users/edward/Zhuo/NYU/FA22/design_project/project/node_modules/@fluentui/dom-utilities/src/getVirtualParent.ts"],"sourcesContent":["import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the virtual parent given the child element, if it exists.\n *\n * @public\n */\nexport function getVirtualParent(child: HTMLElement): HTMLElement | undefined {\n  let parent: HTMLElement | undefined;\n  if (child && isVirtualElement(child)) {\n    parent = child._virtual.parent;\n  }\n  return parent;\n}\n"]},"metadata":{},"sourceType":"module"}